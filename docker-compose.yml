

services:
  n8n:
    image: n8nio/n8n
    container_name: frameworkx-n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: 172.17.0.1
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n_db
      DB_POSTGRESDB_USER: n8n_user
      DB_POSTGRESDB_PASSWORD: n8n_pass
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      N8N_DISABLE_TRACKING: "true"
    volumes:
      - n8n_data:/home/node/.n8n

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: frameworkx-auth-service
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__Default: Host=172.17.0.1;Port=5432;Database=auth_db;Username=auth_user;Password=auth_pass
    ports:
      - "5282:5282"
    depends_on:
      - n8n

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: frameworkx-user-service
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=172.17.0.1;Port=5432;Database=user_db;Username=user_user;Password=user_pass
    ports:
      - "5283:5283"
    depends_on:
      - n8n

  graphql-mesh:
    build:
      context: ./services/graphql-mesh
      dockerfile: Dockerfile
    container_name: frameworkx-graphql-mesh
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - auth-service
      - user-service

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frameworkx-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - n8n
      - auth-service
      - user-service
      - graphql-mesh

volumes:
  n8n_data:
