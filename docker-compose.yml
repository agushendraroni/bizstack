version: "3.8"

services:
  postgres:
    image: postgres:14
    container_name: n8n_postgres
    restart: always
    environment:
      POSTGRES_USER: n8n_user
      POSTGRES_PASSWORD: n8n_pass
      POSTGRES_DB: n8n_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n_db
      DB_POSTGRESDB_USER: n8n_user
      DB_POSTGRESDB_PASSWORD: n8n_pass
      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      N8N_DISABLE_TRACKING: "true"
    volumes:
      - n8n_data:/home/node/.n8n

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shards_frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - n8n
    # Optional: if you need to wait for backend API before showing UI
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  n8n_data:
