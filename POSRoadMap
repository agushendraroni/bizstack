# 🧱 frameworkX — Monorepo MVP UMKM (Point of Sale System)

**Tujuan:**  
Membangun sistem kasir/penjualan digital berbasis microservices untuk mendukung kebutuhan UMKM seperti warung, toko sembako, bengkel, dll.  
Struktur ini didesain modular, scalable, dan siap dikembangkan ke arah enterprise.

---

## 🚦 Struktur Monorepo

```
/frameworkX
│
├── services/
│   ├── auth-service/             # Login, JWT, refresh token
│   ├── user-service/             # Manajemen pengguna & pegawai
│   ├── sales-service/            # Transaksi penjualan, struk, riwayat
│   ├── product-service/          # Produk, kategori, stok, notifikasi stok
│   ├── customer-service/         # Data pelanggan, riwayat, segmentasi
│   ├── settings-service/         # Info toko: logo, jam buka, WhatsApp
│   ├── report-service/           # 🔁 Opsional: agregasi laporan
│   ├── notification-service/     # 🔁 Opsional: notifikasi stok / laporan
│   ├── file-storage-service/     # 🔁 Opsional: upload logo, gambar produk
│   └── audit-service/            # 🔁 Opsional: jejak audit
│
├── shared/
│   ├── SharedLibrary.Core/       # BaseEntity, response, pagination
│   ├── SharedLibrary.DTOs/       # DTO lintas layanan
│   └── SharedLibrary.Security/   # JWT, CurrentUserService, hash password
│
├── frontend/
│   ├── pos-app/                  # React/Tailwind UI kasir & admin
│   └── shared-ui/                # Reusable komponen UI (table, modals)
│
├── automations/
│   └── n8n/                      # Otomasi: sinkronisasi, laporan, notifikasi
│
└── docker/
    ├── docker-compose.yml        # Orkestrasi semua service
    └── Dockerfile                # Template Docker per service
```

---

## 🧩 Modul & Service

| Modul               | Service               | Tanggung Jawab                                                                 |
|--------------------|-----------------------|--------------------------------------------------------------------------------|
| Penjualan          | `sales-service`        | Mencatat transaksi, menghitung total, cetak struk, riwayat transaksi          |
| Produk & Stok      | `product-service`      | CRUD produk, kategori, stok, peringatan stok menipis                          |
| Pelanggan          | `customer-service`     | CRUD pelanggan, riwayat pembelian, segmentasi pelanggan                       |
| Pegawai            | `user-service`         | Login, role/permission (kasir/admin), relasi ke transaksi                     |
| Pengaturan Usaha   | `settings-service`     | Nama toko, logo, jam buka, backup/restore, WhatsApp                           |
| Laporan            | `report-service` (ops) | Agregasi lintas modul: penjualan, stok, pelanggan                             |
| Notifikasi         | `notification-service` | Kirim pengingat ke WhatsApp/email tentang stok, laporan                       |
| Upload & Media     | `file-storage-service` | Upload logo, struk, produk                                                    |
| Audit Trail        | `audit-service`        | Jejak siapa ubah apa dan kapan                                                |
| Autentikasi        | `auth-service`         | JWT, login, refresh token                                                     |

---

## 🔁 Shared Libraries

| Folder                 | Fungsi                                                |
|------------------------|-------------------------------------------------------|
| `SharedLibrary.Core`   | BaseEntity, response wrapper, pagination, helper      |
| `SharedLibrary.DTOs`   | DTO antar service agar tidak redundant                |
| `SharedLibrary.Security`| JWT handler, CurrentUserService, hash password       |

---

## 💡 Frontend

Dibangun dengan:
- **React + Tailwind CSS**
- Responsive, mobile-first (PWA ready)
- Halaman kasir, dashboard admin, manajemen data

---

## ⚙️ Automasi

Dijalankan via **n8n**:
- Backup mingguan otomatis
- Laporan penjualan ke WhatsApp/email
- Notifikasi stok menipis
- Jadwal ekspor PDF

---

## 🚀 Cara Menjalankan

### Jalankan semua service
```bash
cd docker
docker-compose up --build
```

### Jalankan satu service saja (contoh: sales-service)
```bash
cd services/sales-service
dotnet run
```

---

## 📌 Teknologi yang Digunakan

| Komponen     | Teknologi             |
|--------------|------------------------|
| Backend      | ASP.NET Core Web API   |
| Frontend     | React + Tailwind CSS   |
| Database     | PostgreSQL             |
| Messaging    | RabbitMQ (opsional)    |
| Otentikasi   | JWT + Refresh Token    |
| Automasi     | n8n                    |
| Deployment   | Docker + Compose       |

---

## 🎯 Fokus MVP Awal

1. `product-service` ✅
2. `sales-service` 🔜
3. `customer-service` 🔜
4. Integrasi: `auth-service`, `user-service`, `settings-service` 🔜

> Siap dikembangkan jadi sistem kasir modern UMKM skala nasional 🚀

---

## 📬 Kontak

Butuh bantuan atau ingin berkontribusi?  
Silakan buka issue atau hubungi `agus@yourdomain.com` (ganti sesuai email kamu)
