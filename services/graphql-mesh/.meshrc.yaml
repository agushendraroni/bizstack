sources:
  - name: AuthService
    handler:
      openapi:
        source: http://localhost:5001/swagger/v1/swagger.json
        endpoint: http://localhost:5001
  
  - name: UserService
    handler:
      openapi:
        source: http://localhost:5002/swagger/v1/swagger.json
        endpoint: http://localhost:5002
  
  - name: OrganizationService
    handler:
      openapi:
        source: http://localhost:5003/swagger/v1/swagger.json
        endpoint: http://localhost:5003
  
  - name: ProductService
    handler:
      openapi:
        source: http://localhost:5004/swagger/v1/swagger.json
        endpoint: http://localhost:5004
  
  - name: CustomerService
    handler:
      openapi:
        source: http://localhost:5005/swagger/v1/swagger.json
        endpoint: http://localhost:5005
  
  - name: TransactionService
    handler:
      openapi:
        source: http://localhost:5006/swagger/v1/swagger.json
        endpoint: http://localhost:5006
  
  - name: ReportService
    handler:
      openapi:
        source: http://localhost:5007/swagger/v1/swagger.json
        endpoint: http://localhost:5007
  
  - name: NotificationService
    handler:
      openapi:
        source: http://localhost:5008/swagger/v1/swagger.json
        endpoint: http://localhost:5008
  
  - name: FileStorageService
    handler:
      openapi:
        source: http://localhost:5009/swagger/v1/swagger.json
        endpoint: http://localhost:5009
  
  - name: SettingsService
    handler:
      openapi:
        source: http://localhost:5010/swagger/v1/swagger.json
        endpoint: http://localhost:5010

additionalTypeDefs: |
  type BusinessDashboard {
    todaySales: Float
    totalCustomers: Int
    lowStockCount: Int
    pendingOrders: Int
  }

  type QuickSaleResponse {
    success: Boolean!
    orderId: String
    message: String
  }

  input SaleItemInput {
    productId: String!
    quantity: Int!
    price: Float!
  }

  extend type Query {
    businessDashboard: BusinessDashboard
    healthCheck: String!
  }

  extend type Mutation {
    processQuickSale(
      customerId: String!
      items: [SaleItemInput!]!
      paymentMethod: String!
    ): QuickSaleResponse!
  }

additionalResolvers:
  - ./resolvers/business-aggregates.js
  - ./resolvers/health.js

serve:
  port: 4000
  playground: true
  cors:
    origin: "*"
    credentials: true