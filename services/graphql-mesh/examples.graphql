# BizStack MVP GraphQL Queries
# Copy these to GraphQL Playground at http://localhost:4000

# ===== DASHBOARD QUERY =====
query Dashboard {
  # Get dashboard data from report service
  ReportService_getReportsControllerGetDashboard {
    data {
      todaySales
      todayOrders
      totalCustomers
      lowStockProducts
    }
  }
  
  # Get recent customers
  CustomerService_getCustomersControllerGetAllCustomers {
    data
  }
  
  # Get low stock products
  ProductService_getProductsControllerGetLowStockProducts {
    data
  }
}

# ===== BUSINESS SETUP QUERY =====
query BusinessSetup {
  # Get company info
  OrganizationService_getCompaniesControllerGetAllCompanies {
    data
  }
  
  # Get users/staff
  UserService_getUsersControllerGetAllUsers {
    data
  }
  
  # Get products
  ProductService_getProductsControllerGetAllProducts {
    data
  }
}

# ===== SALES TRANSACTION =====
mutation CreateOrder($orderData: TransactionService_CreateOrderDto!) {
  TransactionService_postOrdersControllerCreateOrder(createOrderDto: $orderData) {
    data {
      id
      total
      status
    }
  }
}

# ===== CUSTOMER MANAGEMENT =====
mutation CreateCustomer($customerData: CustomerService_CreateCustomerDto!) {
  CustomerService_postCustomersControllerCreateCustomer(createCustomerDto: $customerData) {
    data {
      id
      name
      email
    }
  }
}

# ===== INVENTORY MANAGEMENT =====
mutation UpdateStock($productId: String!, $stockData: ProductService_UpdateStockDto!) {
  ProductService_patchProductsControllerUpdateStock(id: $productId, updateStockDto: $stockData) {
    data
  }
}

# ===== NOTIFICATION SYSTEM =====
mutation SendNotification($notificationData: NotificationService_SendNotificationDto!) {
  NotificationService_postNotificationsControllerSendNotification(sendNotificationDto: $notificationData) {
    data
  }
}

# ===== FILE UPLOAD =====
mutation UploadFile($fileData: FileStorageService_UploadFileDto!) {
  FileStorageService_postFilesControllerUploadFile(uploadFileDto: $fileData) {
    data {
      fileId
      fileName
      fileUrl
    }
  }
}

# ===== REPORTS =====
query SalesReport($startDate: String, $endDate: String) {
  ReportService_getReportsControllerGetSalesReport(startDate: $startDate, endDate: $endDate) {
    data {
      date
      totalSales
      totalOrders
    }
  }
}